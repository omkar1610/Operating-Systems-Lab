NAME: SARTHAK CHAKRABORTY
ROLL: 16CS30044


###########################################
			REPORT
###########################################


This report discusses the strategy that we have used in the linked list based FAT implementation of file system.


1. User function must enter the file sie, block size and initialize the file system by calling the function 'init'.

2. The file system contains a fixed number of blocks, that depends on the file size and block size. The first block is the super block that contains necessary information about the file system and a bit vector that denotes the free blocks.

3. The first block contains the FAT table, second block contains the directory information and the other blocks are data blocks.

4. We also maintain a file descriptor table that indicated the file descriptors that are valid and maintains the pointers for reading and writing to the file.

5. my_open() function opens a file and returns a file descriptor. It initializes the read and write pointers for that file descriptor. It creates a new file and enters the data in the directory if it is already not there.

6. my_read() function takes input as the file descriptor, a character buffer where the data is to be read and the number of bytes that is to be read. It first goes to the current block maintained in the file descriptor table and then reads from the file.

7. my_write() function takes input parameters as the file descriptor, a character buffer that is to be written into the file and the number of bytes of data that needs to be written. Operation is similar to my_read() function.

8. my_cat() function prints the contents of the file.

9. my_copy() takes as input the file descriptor(1st argument), a linux file descriptor(2nd argument) and a flag that would denote the sorce and the destination of the copied file. If flag is 0, then copy from linux fd to FAT fd. If flag is 1, just the opposite.

10. my_close() function invalidates the file descriptor.

11. The functions can be used as an API call from the user program. A library called "alt.h" is to be included that would contain the functions. The user must use Makefile to run the program.

12. 'alt1.h' is the header file while function definitions are written in 'alt1.cpp'. 'assn6_grp_14.cpp' is the user program.


############################################################################################
